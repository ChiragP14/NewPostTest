{
	"info": {
		"_postman_id": "26aaa8df-5157-4479-969f-de52f4bb5952",
		"name": "NightTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26928982"
	},
	"item": [
		{
			"name": "New_request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20);\r",
							"});\r",
							"\r",
							"console.log(\"executed\"); */"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/employees?id=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "adding new",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(60);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"\r",
							"    pm.environment.set(\"id\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \r\n        \"name\": \"patwari\",\r\n        \"salary\": \"100000\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/employees",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetching_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"/*pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var id_new =\r",
							"        pm.environment.get(\"id\");\r",
							"    pm.expect(id_new).eql(35);\r",
							"   // pm.expect(jsonData.id).to.eql(id_new)\r",
							"});*/\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \r\n        \"name\": \"patwari\",\r\n        \"salary\": \"100000\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/employees/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updating name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"   \r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"   if(jsonData.id<20)\r",
							"\r",
							"\r",
							"    {\r",
							"        postman.setNextRequest(\"New_request\");\r",
							"    }\r",
							"    else\r",
							"    {\r",
							"         postman.setNextRequest(\"Fetching_data\");\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/employees/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"employees",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "localhost:3000"
		}
	]
}